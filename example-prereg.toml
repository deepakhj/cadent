### pre-regex filters to push things around various backends
### if there are multiple backends or reject some things

[graphite-regex-map]
listen_server="graphite-proxy"   # which listener to sit in front of (must be in the main config)
default_backend="graphite-proxy"

    # another backend
    [[graphite-regex-map.map]]
    #what we're regexed from the input
    regex="""^servers.main.*"""
    backend="graphite-proxy"

    # anything that starts with the prefix
    [[graphite-regex-map.map]]
    prefix="""servers.main-"""
    backend="graphite-statsd"

    # Sub string type match
    [[graphite-regex-map.map]]
    substring=".badline."
    reject=true  # special "reject me" type

[statsd-regex-map]
listen_server="statsd-proxy" # which listener to sit in front of  (must be in the main config)
default_backend="statsd-proxy"  # failing a match go here

    [statsd-regex-map.accumulator]
    backend = "graphite-proxy"
    input_format = "statsd"
    output_format = "graphite"

    # do this only if there are not that many metrics otherise RAM will become an issue
    # this will "emit 0s" for a given metric if it has not been seen in the flush time window
    # this can take ALOT of ram if you have alot of distinct keys if true
    keep_keys = false

    # options for statsd input formats (for outputs)
    options = [
            ["legacyNamespace", "true"],
            ["prefixGauge", "gauges"],
            ["prefixTimer", "timers"],
            ["prefixCounter", "counters"],
            ["globalPrefix", ""],
            ["globalSuffix", "stats"],
            ["percentThreshold", "0.75,0.90,0.95,0.99"]
    ]

        # aggregate bin counts ...
        #  every 5s and 10s aggrigates for (5 and 10) will be dumped to files
        # (See the writer)
        # the first entry in Keepers is Accumulators "re-insert" into the general server
        # line processor.  if you name the
        # backend = "BLACKHOLE"
        # the stats are NOT re-fed in, and only the writers will be used
        # NOTE: this can be VERY RAM intensive as each metric must be stored in RAM for this
        # Aggrigation to be accomplished properly
        times = ["5s", "10s"]

        [statsd-regex-map.accumulator.writer]
        driver = "file"
        dsn = "/tmp/moo"  #  filenames will be /tmp/moo_5s and /tmp/moo_10s for each aggregate set


    [[statsd-regex-map.map]]
    substring="badline"
    reject=true  # special "reject me" type

    # another backend
    [[statsd-regex-map.map]]
    regex='^stats.timers..*'  #what we're regexed from the input
    backend="statsd-proxy"

    # anything that starts with the prefix (in lue of a more expesive regex)
    [[statsd-regex-map.map]]
    prefix="statdtest.here."
    backend="statsd-servers"
