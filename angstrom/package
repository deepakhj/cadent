#!/bin/bash

## Autodetect current dir
export ANGSTROM_DIR="$(cd "$(dirname "${0}")" && pwd -P)"
export SOURCE="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd -P)"

## get parameters
export APP_NAME="${1:-unknown_app}"
export BUILDID="${2:-develop}"
export TARGET="${3:-${ANGSTROM_DIR}/../staging}"
export OUTPUT="${4:-${ANGSTROM_DIR}/../../output}"

export CONTROL_SOURCE="${ANGSTROM_DIR}/control"

## clean existing staging output
echo Clean existing staging directory
rm -rf ${TARGET}
echo Clean existing output directory
rm -rf ${OUTPUT}

## Stage
echo This script will prep this package for Angstrom Packager
echo "App: ${APP_NAME:=unknown_app}/${BUILDID:=develop}"

PACKAGE_BASE="${TARGET}/${APP_NAME}/${BUILDID}"
CONTENTS="${PACKAGE_BASE}/contents"
CONTROL="${PACKAGE_BASE}/control"

function die(){
	local -i errcode=${1}
	shift
	local ERROR=""
	test ${errcode} -ne 0 && ERROR="Error ${errcode}:"
	echo package: ${ERROR} "${@}" >&2
	exit ${errcode}
}

echo Staging contents:
mkdir -p "${CONTENTS}"
tar -C "${SOURCE}" -cf - . | tar -C "${CONTENTS}" -xf -

## removing gitkeep files
find "${TARGET}" -type f -name .gitkeep -exec rm {} \;
find "${TARGET}" -type f -name .gitignore -exec rm {} \;
## Dangerous, but still
find "${TARGET}" -type d -name .git -exec rm -rf {} \;

## Create Control dir
mkdir -p "${CONTROL}"
cp -r "${CONTROL_SOURCE}"/* "${CONTROL}"

##Create package files here instead of relying on jenkins plugin. Make sure to check "Skip Packaging in jenkins job setup."
mkdir -p "${OUTPUT}"

tar -cvzf "${OUTPUT}/${APP_NAME}-${BUILDID}.tmp" -C ${PACKAGE_BASE} contents control

echo All ready to upload
