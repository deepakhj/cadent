#!/bin/bash
##
## This script takes a directory full of executable templates and processes them into
## a target directory
##
## Usage: process_templates <TARGET_DIR> <SOURCE_DIR>
##
## Each executable file in source directory is executed and its output is placed
## into target directory with same name
##

export ME="$(basename "${0}")"
export CONTROL_DIR="$(cd "$(dirname "${0}")" && pwd -P)"
export TARGET_DIR="${2}"
export SOURCE_DIR="${1}"


function die(){
	local -i errcode=${1}
	shift
	local error=""
	test ${errcode} -ne 0 && error="Error ${errcode}:"
	echo "${ME}:" ${error} "${@}"
	exit ${errcode}
}

function read_config(){
	local credname="${1}"
	local default="${2}"
	local BASEDIR="/etc/mfp"
	for BASEDIR in '/opt/mfp/etc/creds' '/etc/mfp' "${CONTROL_DIR}/defaults"
	do
		if test -f "${BASEDIR}/${credname}"
		then
			cat "${BASEDIR}/${credname}"
			return
		else
			#echo "${BASEDIR}/${credname} not found" >&2
			true
		fi
	done
	echo "${default}"
}

declare -fx read_config

if test -d "${SOURCE_DIR}"
then

  ## get real path of the source dir
  SOURCE_DIR="$(cd "${SOURCE_DIR}" && pwd -P)"

  mkdir -p "${TARGET_DIR}"

  test -d "${TARGET_DIR}" || die 2 Target Directory does not exist and could not be created

  ## get real path of the target dir
  TARGET_DIR="$(cd "${TARGET_DIR}" && pwd -P)"


  function process_template(){
  	local template="${1}"
  	local template_rel_name="${template##${SOURCE_DIR}}"

  	test ! -x "${template}" && echo "${template_rel_name}: Not executable, skipping" && return

  	local target_file="${TARGET_DIR}/${template_rel_name##/}"
  	mkdir -p "$(dirname "${target_file}")"

  	echo -n "${template_rel_name}: Processing ..."
  	"${template}" > "${target_file}"
  	echo '... done'
  }

  declare -fx  process_template

  echo Processing templates from: "${SOURCE_DIR}"
  echo Processing templates   to: "${TARGET_DIR}"

  find "${SOURCE_DIR}" -type f  | while read template
  do
  	process_template "${template}"
  done

fi

echo "Processed all templates in: ${SOURCE_DIR}"